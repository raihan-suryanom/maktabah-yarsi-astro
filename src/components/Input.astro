---
import { cva } from "class-variance-authority";

import { cn } from "../lib/utils/cn";

import type { HTMLAttributes } from "astro/types";
import type { VariantProps } from "class-variance-authority";

export const inputStyles = cva(
  "rounded-lg bg-light-300 text-2xl text-dark-100 ring-offset-white transition-colors placeholder:text-lg placeholder:text-dark-100/50 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary-light focus-visible:ring-offset-1 dark:bg-dark-300 dark:text-light-100 dark:ring-offset-slate-950 dark:placeholder:text-light-100/50 dark:focus-visible:ring-primary-dark",
  {
    variants: {
      dimension: {
        medium: "rounded-md px-7 py-5",
        small: "py-1.5",
      },
    },
    defaultVariants: {
      dimension: "medium",
    },
  },
);

export type Props = HTMLAttributes<"input"> & VariantProps<typeof inputStyles>;

const { dimension, class: className, ...props } = Astro.props;
---

<input class={cn(inputStyles({ dimension, className }))} {...props} />

<style>
  input[type="number"].appearance-none::-webkit-inner-spin-button,
  input[type="number"].appearance-none::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type="number"].appearance-none {
    -moz-appearance: textfield;
    appearance: textfield;
  }
</style>
